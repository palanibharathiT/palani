EC2 instance : Requirements = t2.micro ; ubuntu OS ; Security group - Inbound rule - All traffic ; Storage - 20 GiB
---------------------------------------------------------------------------------------------------------------------
sudo su 
apt update -y
apt upgrade -y
apt-get install curl
Go to : Kubernetes Documentation - Tasks - Install Tools - Install and Set Up kubectl on Linux (steps are given below)
Step 1 : curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"    
Step 2 : curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"  
Step 3 : echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
Step 4 : sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
Step 5 : kubectl version --client
step 6 : apt-get install docker.io -y
Go to : minikube start - linux OS - Debian package (steps are given below)
Step 1 : curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
Step 2 : sudo dpkg -i minikube_latest_amd64.deb
Step 3 : minikube start
Step 4 : minikube start --driver=docker --force
Step 5 : minikube status
step 6 : vi pod1.yml
kind: Pod
apiVersion: v1
metadata:
 name: testpod
spec:
  containers:
  - name: c00
    image: ubuntu
    command: ["/bin/bash", "-c", "while true; do echo Hello-pondicherry-vijay; sleep 5; done"]
pods starting ...
step 1 : kubectl apply -f pod1.yml
step 2 : kubectl get pods
step 3 : kubectl get pods -o wide
step 4 : kubectl describe pod testpod
step 5 : kubectl logs -f testpod
step 6 : kubectl logs -f testpod -c c00

